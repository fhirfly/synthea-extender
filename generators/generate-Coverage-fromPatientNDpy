import ndjson
import random
import pandas as pd
import uuid
import json

# Read the CSV file
# Read the CSV file
practitionerdata = pd.read_csv('./input/npi_practitioner.csv')
# Read NDJSON file
with open('./input/Patient.ndjson', encoding='utf-8') as f:
    data = ndjson.load(f)

with open('./output/Consent.ndjson', 'w') as f:
# Process each line
    for line in data:

        # Get encounter id
        patient_id = line['id']
        random_row = practitionerdata.sample(n=1)
        practitioner_id = random_row['NPI']
        coverage = {
            "resourceType": "Coverage",
            "id": "cov001",
            "status": "active",
            "type": {
                "coding": [
                    {
                        "system": "http://terminology.hl7.org/CodeSystem/v3-ActCode",
                        "code": "EHCPOL",
                        "display": "extended healthcare"
                    }
                ]
            },
            "policyHolder": {
                "reference": "Patient/" + patient_id,
                "display": "John Doe"
            },
            "subscriber": {
                "reference": "Patient/" + patient_id,
                "display": "John Doe"
            },
            "beneficiary": {
                "reference": "Patient/" + patient_id,
                "display": "John Doe"
            },
            "relationship": {
                "coding": [
                    {
                        "system": "http://terminology.hl7.org/CodeSystem/subscriber-relationship",
                        "code": "self",
                        "display": "Self"
                    }
                ]
            },
            "period": {
                "start": "2023-01-01",
                "end": "2023-12-31"
            },
            "payor": [
                {
                    "reference": "Organization/org001",
                    "display": "ABC Insurance Company"
                }
            ],
            "class": [
                {
                    "type": {
                        "system": "http://terminology.hl7.org/CodeSystem/coverage-class",
                        "code": "plan",
                        "display": "Plan"
                    },
                    "value": "Silver Plan"
                }
            ]
        }

        f.write(json.dumps(coverage, separators=(',', ':')))
        f.write('\n')